$blockName: site-header; /* in Sass would use quotes 'site-header' */

.site-header {
    position: absolute;
    width: 100%;
    padding: 10px 0;
    z-index: 2;
    transition: background-color .3s ease-out;

    &--is-expanded {
        background-color: rgba($main-blue, .55);
    }

    /* targetting screen that are at least medium or larger */
    @mixin atMedium {
        position: fixed;
        background-color: rgba($main-blue, .3); /* postcss-hexrgba */

        &--dark {
            background-color: rgba($main-blue, .85);
        }
    }

    &__logo {
        position: absolute;
        top: 0;
        left: 50%;
        transform: translateX(-50%) scale(.8); /* center the logo and reduce */
        transform-origin: 50% 0; /* set origin for transform to (top) for scroll animation */
        transition: transform .3s ease-out;
        background-color: $main-blue;
        padding: 25px 36px;

        @mixin atMedium {
            left: auto;
            transform: translateX(0);
            padding: 25px 36px;

            /* & - gives us the selector for the logo element */
            .site-header--dark & {
                transform: scale(.55);
            }
        }
    }

    &__menu-icon {
        width: 20px;
        height: 19px;
        position: absolute;
        top: 10px;
        right: 10px;
        z-index: 10;

        &::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 20px;
            height: 3px;
            background-color: #fff;
            /* set origin for transform to (left top), by default all browser have it set to center -> transform-origin: 50% 50%; */
            transform-origin: 0 0;
            transition: transform .3s ease-out;
        }

        &__middle {
            position: absolute;
            top: 8px;
            left: 0;
            width: 20px;
            height: 3px;
            background-color: #fff;
            transition: all .3s ease-out;
            /* set origin for transform to (left). This way the middle shrinks into the left edge */
            transform-origin: 0 50%;
        }

        &::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 20px;
            height: 3px;
            background-color: #fff;
            /* set origin for transform to (left bottom), by default all browser have it set to center -> transform-origin: 50% 50%; */
            transform-origin: 0 100%;
            transition: transform .3s ease-out;
        }

        @mixin atMedium {
            display: none;
        }
    }

    &__btn-container {
        @mixin atMedium {
            float: right;
        }
    }

    &__menu-icon--close-x {
        &::before {
            transform: rotate(45deg) scaleX(1.25); /* scale X to increase the length of the bar by .25 after rotating */
        }

        /* will be #{$blockName} in Sass to interpolate */
        .$(blockName)__menu-icon__middle {
            opacity: 0;
            transform: scaleX(0);
        }

        &::after {
            transform: rotate(-45deg) scaleX(1.25) translateY(1px); /* translateY() to adjust the vertical positioning of the element */
        }
    }

    &__menu-content {
        padding-top: 90px;
        text-align: center;
        opacity: 0;
        z-index: -10; /* dropping the z-index cos content can still be clicked on when opacity is 0 */
        position: relative; /* setting position to relative otherwise the browser won't acknowledge the z-index value */
        transform: scale(1.2);
        transition: all .3s ease-out;

        @mixin atMedium {
            padding-top: 0;
            opacity: 1;
            z-index: 1;
            transform: scale(1);
        }

        &--is-visible {
            opacity: 1;
            z-index: 1;
            transform: scale(1);
        }
    }
}